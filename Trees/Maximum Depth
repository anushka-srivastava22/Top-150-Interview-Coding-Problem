Problem Statement
https://leetcode.com/problems/maximum-depth-of-binary-tree/
Given the root of a binary tree, return its maximum depth.

A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.


Solution

class Solution {
    public int maxDepth(TreeNode root) {
        if(root == null)
        {
            return 0;
        }
        else
        {
            int left_subtree = maxDepth(root.left);
            int right_subtree = maxDepth(root.right);
            if(left_subtree > right_subtree)
            {
                return left_subtree+1;
            }
            else
            {
                return right_subtree+1;
            }
        }
    }
}


Algorithm

1. Check if root is equal to null then return 0.
2. Otherwise assign maxDepth(root.left) to left_subtree & assign maxDepth(root.right) to right_subtree.
3. Check if value of left_subtree is greater than right_subtree then return left_subtree+1 otherwise return right_subtree + 1.
