Problem Statement

https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).


Solution

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> list = new ArrayList<>();  
        if(root == null)  
            return list;
        
        Queue<TreeNode> queue = new LinkedList<>();
        int flag = 0; 
        queue.offer(root); 
        while(!queue.isEmpty()){
            
            int level = queue.size(); 
            
            List<Integer> ans = new ArrayList<>();  
            for(int i=0 ; i<level;i++){
                TreeNode node = queue.poll();  
                if(node.left != null)
                    queue.offer(node.left);  
                if(node.right != null)
                    queue.offer(node.right); 
                
                ans.add(node.val);  
            }
            if(flag != 0){
                flag =0;
               Collections.reverse(ans); 
            } 
            else
                flag = 1;
            list.add(ans); 
            
        }
        return list;
    }
}
