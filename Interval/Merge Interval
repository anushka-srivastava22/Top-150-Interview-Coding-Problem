Problem Statement
https://leetcode.com/problems/merge-intervals/

Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.

Solution

class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals, (arr1,arr2) -> arr1[0]-arr2[0]);
        ArrayList<int[]> res=new ArrayList<>();
        for(int[] interval : intervals)
        {
            if(res.size() == 0)
            {
                res.add(interval);
            }
            else 
            {
                int[] prev_interval = res.get(res.size()-1);
                if(prev_interval[1]>=interval[0])
                {
                    prev_interval[1] = Math.max(prev_interval[1],interval[1]);
                }
                else
                {
                    res.add(interval);
                }
            }
        }
        return res.toArray(new int[res.size()][]);
    }
}
