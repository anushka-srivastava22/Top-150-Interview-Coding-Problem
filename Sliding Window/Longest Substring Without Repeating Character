Problem Statement

https://leetcode.com/problems/longest-substring-without-repeating-characters/
Given a string s, find the length of the longest substring without repeating characters.

Solution

class Solution {
    public int lengthOfLongestSubstring(String s) {
        int i=0,j=0,max=0;
        HashSet<Character> set=new HashSet<>();
        while(j<s.length())
        {
            if(!(set.contains(s.charAt(j))))
            {
                set.add(s.charAt(j++));
                max=Math.max(max,set.size());
            }
            else
            {
                set.remove(s.charAt(i++));
            }
        }
        return max;
    }
}

Algorithm 

1. Assign i=0,j=0,max=0.
2. Create a hashset of characters as set.
3. Run while loop till j is less than length of s.
4. Check if set contains the character at j position, then add character at j position to set and increase j along with assign maximum value among max and size of set to max.
5. Return max.
