Problem Statement
https://leetcode.com/problems/isomorphic-strings/
Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the 
order of characters. No two characters may map to the same character, but a character may map to itself.

Solution
class Solution {
    public boolean isIsomorphic(String s, String t) {
        int map1[] = new int[200];
        int map2[] = new int[200];
        if(s.length()!=t.length())
        {
            return false;
        }
        for(int i=0;i<s.length();i++)
        {
            if(map1[s.charAt(i)]!=map2[t.charAt(i)])
            {
                return false;
            }
            map1[s.charAt(i)]=i+1;
            map2[t.charAt(i)]=i+1;
        }
        return true;
    }
}

Algorithm 
1. Create 2 arrays as map1 and map2 of size 200.
2. Check if length of s is not equal to length of t then return false.
3. Run for loop from 0 to length of string s.
4. Check if character at i position of map1 is not equal to character at i position of map2 then return false.
5. Assign  map1[s.charAt(i)]=i+1 and map2[t.charAt(i)]=i+1.
6. Return false.
