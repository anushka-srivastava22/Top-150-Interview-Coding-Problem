Problem Statement

https://leetcode.com/problems/valid-parentheses/

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.


Solution

class Solution {
    public boolean isValid(String s) {
        if(s.length()%2==1)
        {
            return false;
        }
        Stack<Character> st=new Stack<>();
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)=='{' || s.charAt(i)=='[' || s.charAt(i)=='(')
            {
                st.push(s.charAt(i));
            }
            else if(s.charAt(i)=='}')
            {
                if(!st.isEmpty() && st.peek()=='{')
                {
                    st.pop();
                }
                else 
                {
                    return false;
                }
            }
            else if(s.charAt(i)==']')
            {
                if(!st.isEmpty() && st.peek()=='[')
                {
                    st.pop();
                }
                else 
                {
                    return false;
                }
            }
            else if(s.charAt(i)==')')
            {
                if(!st.isEmpty() && st.peek()=='(')
                {
                    st.pop();
                }
                else 
                {
                    return false;
                }
            }
            
        }
        if(!st.isEmpty()) 
            return false; 
        return true;
    }
}
