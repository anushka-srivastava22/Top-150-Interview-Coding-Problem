Problem Statement
https://leetcode.com/problems/valid-palindrome/
A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, 
it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

Solution

class Solution {
    public boolean isPalindrome(String s) {
        if(s==null)
        {
            return false;
        }
        s=s.toLowerCase();
        int i=0;
        int j=s.length()-1;
        while(i<j)
        {
            while(i<j && !((s.charAt(i)>='a' && s.charAt(i)<='z') || 
            (s.charAt(i)>='0' && s.charAt(i)<='9') ))
            {
                i++;
            }
            while(i<j && !((s.charAt(j)>='a' && s.charAt(j)<='z') || 
            (s.charAt(j)>='0' && s.charAt(j)<='9') ))
            {
                j--;
            }
            if(s.charAt(i)!=s.charAt(j))
            {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}

Algorithm
1. Check if s is null then return false.
2. Convert s to Lower Case.
3. Assign i=0,j=length of s.
4. Run while loop till i<j.
5. Run  while loop till i< j and character at i  >= a and <=z along with >=0 and <=9 and increase i.
6. Run  while loop till i< j and character at j  >= a and <=z along with >=0 and <=9 and decrease j.
7. Check if character at i is not equal to character at j of s, return false.
8. Increase i and decrease j.
9. Return true.
