https://leetcode.com/problems/container-with-most-water/
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Notice that you may not slant the container.

Solution

class Solution {
    public int maxArea(int[] height) {
        int l=0;
        int r=height.length-1;
        int sum=0;
        while(l<r)   
        {
            int area = (r-l)*Math.min(height[l],height[r]);
             sum = Math.max(area,sum);
            if(height[l]<height[r])
            {
                l++;
            }
            else
            {
                r--;
            }
        }
        return sum;
    }
}

Algorithm
1. Assign l0 and r=length-1 and sum=0.
2. Run while loop till r<l.
3. Store the difference between r and l multiplied by min value among values of height at l and r position.
4. If value of height at l is less than value at r of height array then increase l otherwise decrease r.
5. Return sum.
