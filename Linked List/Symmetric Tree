Problem Statement

https://leetcode.com/problems/symmetric-tree/
Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).


Solution

class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root==null)
        {
            return true;
        }
        return helper(root.left,root.right);
    }
    public boolean helper(TreeNode r1, TreeNode r2)
    {
        if(r1 == null && r2 == null)
        {
            return true;
        }
        else if((r1==null&&r2!=null) || (r1!=null && r2==null))
        {
            return false;
        }
        else if(r1.val != r2.val) 
        {
            return false;
        }
        return helper(r1.left,r2.right) && helper(r1.right,r2.left);
    }
}
