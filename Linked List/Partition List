Problem Statement
https://leetcode.com/problems/partition-list/

Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

Solution 

class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode dummy1 = new ListNode(-1);
        ListNode dummy2 = new ListNode(-1);
        ListNode curr = head,curr1=dummy1,curr2=dummy2;
        while(curr!=null)
        {
            if(curr.val>=x)
            {
                curr2.next = curr;
                curr2 = curr;
            }
            else
            {
                curr1.next = curr;
                curr1 = curr;
            }
            curr = curr.next;
        }
        curr2.next = null;
        if(dummy1.next == null)
        {
            return dummy2.next;
        }
        else
        {
            curr1.next = dummy2.next;
        }
        return dummy1.next;
    }
}
